var k=Object.defineProperty;var $=(o,e,t)=>e in o?k(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var g=(o,e,t)=>($(o,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const l of i)if(l.type==="childList")for(const r of l.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const l={};return i.integrity&&(l.integrity=i.integrity),i.referrerPolicy&&(l.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?l.credentials="include":i.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function s(i){if(i.ep)return;i.ep=!0;const l=t(i);fetch(i.href,l)}})();var P=Object.defineProperty,_=(o,e,t)=>e in o?P(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,u=(o,e,t)=>(_(o,typeof e!="symbol"?e+"":e,t),t);const j=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,O=/^-?[0-9]\d*$/,G=/^(?=.*[A-Za-z])(?=.*\d).{8,}$/,N=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,A=o=>{let e=o;return typeof o=="string"&&(e=o.trim()),!e},q=o=>j.test(o),B=(o,e)=>o.length>e,z=(o,e)=>o.length<e,D=o=>typeof o!="string"?!1:!isNaN(+o)&&!isNaN(parseFloat(o)),K=o=>O.test(o),H=o=>G.test(o),X=o=>N.test(o),Z=(o,e)=>o>e,U=(o,e)=>o<e,p=o=>typeof o!="string"||o==="";var c=(o=>(o.Required="required",o.Email="email",o.MinLength="minLength",o.MaxLength="maxLength",o.Password="password",o.Number="number",o.Integer="integer",o.MaxNumber="maxNumber",o.MinNumber="minNumber",o.StrongPassword="strongPassword",o.CustomRegexp="customRegexp",o.MinFilesCount="minFilesCount",o.MaxFilesCount="maxFilesCount",o.Files="files",o))(c||{}),S=(o=>(o.Required="required",o))(S||{}),V=(o=>(o.Label="label",o.LabelArrow="labelArrow",o))(V||{});const w=[{key:c.Required,dict:{en:"The field is required"}},{key:c.Email,dict:{en:"Email has invalid format"}},{key:c.MaxLength,dict:{en:"The field must contain a maximum of :value characters"}},{key:c.MinLength,dict:{en:"The field must contain a minimum of :value characters"}},{key:c.Password,dict:{en:"Password must contain minimum eight characters, at least one letter and one number"}},{key:c.StrongPassword,dict:{en:"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character"}},{key:c.Number,dict:{en:"Value should be a number"}},{key:c.MaxNumber,dict:{en:"Number should be less or equal than :value"}},{key:c.MinNumber,dict:{en:"Number should be more or equal than :value"}},{key:c.MinFilesCount,dict:{en:"Files count should be more or equal than :value"}},{key:c.MaxFilesCount,dict:{en:"Files count should be less or equal than :value"}},{key:c.Files,dict:{en:"Uploaded files have one or several invalid properties (extension/size/type etc)."}}],W="Value is incorrect",F=o=>typeof o=="object"&&o!==null&&"then"in o&&typeof o.then=="function",Y=o=>{let e=o;const t=[];for(;e;)t.unshift(e),e=e.parentNode;return t},J=(o,e)=>{const t=[...e].reverse();for(let s=0,i=t.length;s<i;++s){const l=t[s];for(const r in o){const a=o[r];if(a.groupElem===l)return[r,a]}}return null},m=o=>Array.isArray(o)?o.filter(e=>e.length>0):typeof o=="string"&&o.trim()?[...o.split(" ").filter(e=>e.length>0)]:[],y=o=>o instanceof Element||o instanceof HTMLDocument,Q=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",C=5,E={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1,validateBeforeSubmitting:!1};class R{constructor(e,t,s){u(this,"form",null),u(this,"fields",{}),u(this,"groupFields",{}),u(this,"errors",{}),u(this,"isValid",!1),u(this,"isSubmitted",!1),u(this,"globalConfig",E),u(this,"errorLabels",{}),u(this,"successLabels",{}),u(this,"eventListeners",[]),u(this,"dictLocale",w),u(this,"currentLocale","en"),u(this,"customStyleTags",{}),u(this,"onSuccessCallback"),u(this,"onFailCallback"),u(this,"onValidateCallback"),u(this,"tooltips",[]),u(this,"lastScrollPosition"),u(this,"isScrollTick"),u(this,"fieldIds",new Map),u(this,"getKeyByFieldSelector",i=>this.fieldIds.get(i)),u(this,"getFieldSelectorByKey",i=>{for(const[l,r]of this.fieldIds)if(i===r)return l}),u(this,"getCompatibleFields",()=>{const i={};return Object.keys(this.fields).forEach(l=>{let r=l;const a=this.getFieldSelectorByKey(l);typeof a=="string"&&(r=a),i[r]={...this.fields[l]}}),i}),u(this,"setKeyByFieldSelector",i=>{if(this.fieldIds.has(i))return this.fieldIds.get(i);const l=String(this.fieldIds.size+1);return this.fieldIds.set(i,l),l}),u(this,"refreshAllTooltips",()=>{this.tooltips.forEach(i=>{i.refresh()})}),u(this,"handleDocumentScroll",()=>{this.lastScrollPosition=window.scrollY,this.isScrollTick||(window.requestAnimationFrame(()=>{this.refreshAllTooltips(),this.isScrollTick=!1}),this.isScrollTick=!0)}),u(this,"formSubmitHandler",i=>{i.preventDefault(),this.isSubmitted=!0,this.validateHandler(i)}),u(this,"handleFieldChange",i=>{let l;for(const r in this.fields)if(this.fields[r].elem===i){l=r;break}l&&(this.fields[l].touched=!0,this.validateField(l,!0))}),u(this,"handleGroupChange",i=>{let l;for(const r in this.groupFields)if(this.groupFields[r].elems.find(h=>h===i)){l=r;break}l&&(this.groupFields[l].touched=!0,this.validateGroup(l,!0))}),u(this,"handlerChange",i=>{i.target&&(this.handleFieldChange(i.target),this.handleGroupChange(i.target),this.renderErrors())}),this.initialize(e,t,s)}initialize(e,t,s){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=E,this.errorLabels={},this.successLabels={},this.eventListeners=[],this.customStyleTags={},this.tooltips=[],this.currentLocale="en",typeof e=="string"){const i=document.querySelector(e);if(!i)throw Error(`Form with ${e} selector not found! Please check the form selector`);this.setForm(i)}else if(e instanceof HTMLFormElement)this.setForm(e);else throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");if(this.globalConfig={...E,...t},s&&(this.dictLocale=[...s,...w]),this.isTooltip()){const i=document.createElement("style");i.textContent=Q,this.customStyleTags[V.Label]=document.head.appendChild(i),this.addListener("scroll",document,this.handleDocumentScroll)}}getLocalisedString(e,t,s){var i;const l=s??e;let r=(i=this.dictLocale.find(a=>a.key===l))==null?void 0:i.dict[this.currentLocale];if(r||s&&(r=s),r&&t!==void 0)switch(e){case c.MaxLength:case c.MinLength:case c.MaxNumber:case c.MinNumber:case c.MinFilesCount:case c.MaxFilesCount:r=r.replace(":value",String(t))}return r||s||W}getFieldErrorMessage(e,t){const s=typeof e.errorMessage=="function"?e.errorMessage(this.getElemValue(t),this.fields):e.errorMessage;return this.getLocalisedString(e.rule,e.value,s)}getFieldSuccessMessage(e,t){const s=typeof e=="function"?e(this.getElemValue(t),this.fields):e;return this.getLocalisedString(void 0,void 0,s)}getGroupErrorMessage(e){return this.getLocalisedString(e.rule,void 0,e.errorMessage)}getGroupSuccessMessage(e){if(e.successMessage)return this.getLocalisedString(void 0,void 0,e.successMessage)}setFieldInvalid(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t,this.fields[e].elem)}setFieldValid(e,t){this.fields[e].isValid=!0,t!==void 0&&(this.fields[e].successMessage=this.getFieldSuccessMessage(t,this.fields[e].elem))}setGroupInvalid(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}setGroupValid(e,t){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(t)}getElemValue(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}validateGroupRule(e,t,s){switch(s.rule){case S.Required:t.every(i=>!i.checked)?this.setGroupInvalid(e,s):this.setGroupValid(e,s)}}validateFieldRule(e,t,s,i=!1){const l=s.value,r=this.getElemValue(t);if(s.plugin){s.plugin(r,this.getCompatibleFields())||this.setFieldInvalid(e,s);return}switch(s.rule){case c.Required:{A(r)&&this.setFieldInvalid(e,s);break}case c.Email:{if(p(r))break;q(r)||this.setFieldInvalid(e,s);break}case c.MaxLength:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(typeof l!="number"){console.error(`Value for ${s.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(p(r))break;B(r,l)&&this.setFieldInvalid(e,s);break}case c.MinLength:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(typeof l!="number"){console.error(`Value for ${s.rule} rule for [${e}] should be a number. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(p(r))break;z(r,l)&&this.setFieldInvalid(e,s);break}case c.Password:{if(p(r))break;H(r)||this.setFieldInvalid(e,s);break}case c.StrongPassword:{if(p(r))break;X(r)||this.setFieldInvalid(e,s);break}case c.Number:{if(p(r))break;D(r)||this.setFieldInvalid(e,s);break}case c.Integer:{if(p(r))break;K(r)||this.setFieldInvalid(e,s);break}case c.MaxNumber:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(typeof l!="number"){console.error(`Value for ${s.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(p(r))break;const a=+r;(Number.isNaN(a)||Z(a,l))&&this.setFieldInvalid(e,s);break}case c.MinNumber:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(typeof l!="number"){console.error(`Value for ${s.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(p(r))break;const a=+r;(Number.isNaN(a)||U(a,l))&&this.setFieldInvalid(e,s);break}case c.CustomRegexp:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,s);return}let a;try{a=new RegExp(l)}catch{console.error(`Value for ${s.rule} rule for [${e}] should be a valid regexp. This field will be always invalid.`),this.setFieldInvalid(e,s);break}const h=String(r);h!==""&&!a.test(h)&&this.setFieldInvalid(e,s);break}case c.MinFilesCount:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,s);break}if(typeof l!="number"){console.error(`Value for ${s.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(Number.isFinite(r==null?void 0:r.length)&&r.length<l){this.setFieldInvalid(e,s);break}break}case c.MaxFilesCount:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,s);break}if(typeof l!="number"){console.error(`Value for ${s.rule} rule for [${e}] field should be a number. The field will be always invalid.`),this.setFieldInvalid(e,s);break}if(Number.isFinite(r==null?void 0:r.length)&&r.length>l){this.setFieldInvalid(e,s);break}break}case c.Files:{if(l===void 0){console.error(`Value for ${s.rule} rule for [${e}] field is not defined. This field will be always invalid.`),this.setFieldInvalid(e,s);return}if(typeof l!="object"){console.error(`Value for ${s.rule} rule for [${e}] field should be an object. This field will be always invalid.`),this.setFieldInvalid(e,s);return}const a=l.files;if(typeof a!="object"){console.error(`Value for ${s.rule} rule for [${e}] field should be an object with files array. This field will be always invalid.`),this.setFieldInvalid(e,s);return}const h=(n,d)=>{const f=Number.isFinite(d.minSize)&&n.size<d.minSize,b=Number.isFinite(d.maxSize)&&n.size>d.maxSize,x=Array.isArray(d.names)&&!d.names.includes(n.name),M=Array.isArray(d.extensions)&&!d.extensions.includes(n.name.split(".")[n.name.split(".").length-1]),T=Array.isArray(d.types)&&!d.types.includes(n.type);return f||b||x||M||T};if(typeof r=="object"&&r!==null)for(let n=0,d=r.length;n<d;++n){const f=r.item(n);if(!f){this.setFieldInvalid(e,s);break}if(h(f,a)){this.setFieldInvalid(e,s);break}}break}default:{if(typeof s.validator!="function"){console.error(`Validator for custom rule for [${e}] field should be a function. This field will be always invalid.`),this.setFieldInvalid(e,s);return}const a=s.validator(r,this.getCompatibleFields());if(typeof a!="boolean"&&typeof a!="function"&&console.error(`Validator return value for [${e}] field should be boolean or function. It will be cast to boolean.`),typeof a=="function")if(i)this.fields[e].asyncCheckPending=!0;else{this.fields[e].asyncCheckPending=!1;const h=a();if(!F(h)){console.error(`Validator function for custom rule for [${e}] field should return a Promise. This field will be always invalid.`),this.setFieldInvalid(e,s);return}return h.then(n=>{n||this.setFieldInvalid(e,s)}).catch(()=>{this.setFieldInvalid(e,s)})}a||this.setFieldInvalid(e,s)}}}isFormValid(){let e=!0;for(let t=0,s=Object.values(this.fields).length;t<s;++t){const i=Object.values(this.fields)[t];if(i.isValid===void 0){e=void 0;break}if(i.isValid===!1){e=!1;break}}for(let t=0,s=Object.values(this.groupFields).length;t<s;++t){const i=Object.values(this.groupFields)[t];if(i.isValid===void 0){e=void 0;break}if(i.isValid===!1){e=!1;break}}return e}validateField(e,t=!1){var s;const i=this.fields[e];i.isValid=!0;const l=[];return[...i.rules].reverse().forEach(r=>{const a=this.validateFieldRule(e,i.elem,r,t);F(a)&&l.push(a)}),i.isValid&&this.setFieldValid(e,(s=i.config)==null?void 0:s.successMessage),Promise.allSettled(l).finally(()=>{var r;t&&((r=this.onValidateCallback)==null||r.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))})}revalidateField(e){if(typeof e!="string"&&!y(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);return!t||!this.fields[t]?(console.error("Field not found. Check the field selector."),Promise.reject()):new Promise(s=>{this.validateField(t,!0).finally(()=>{this.clearFieldStyle(t),this.clearFieldLabel(t),this.renderFieldError(t,!0),s(!!this.fields[t].isValid)})})}revalidateGroup(e){if(typeof e!="string"&&!y(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);return!t||!this.groupFields[t]?(console.error("Group not found. Check the group selector."),Promise.reject()):new Promise(s=>{this.validateGroup(t).finally(()=>{this.clearFieldLabel(t),this.renderGroupError(t,!0),s(!!this.groupFields[t].isValid)})})}validateGroup(e,t=!1){const s=this.groupFields[e],i=[];return[...s.rules].reverse().forEach(l=>{const r=this.validateGroupRule(e,s.elems,l);F(r)&&i.push(r)}),Promise.allSettled(i).finally(()=>{var l;t&&((l=this.onValidateCallback)==null||l.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}))})}focusInvalidField(){for(const e in this.fields){const t=this.fields[e];if(!t.isValid){setTimeout(()=>t.elem.focus(),0);break}}}afterSubmitValidation(e=!1){this.renderErrors(e),this.globalConfig.focusInvalidField&&this.focusInvalidField()}validate(e=!1){return new Promise(t=>{const s=[];Object.keys(this.fields).forEach(i=>{const l=this.validateField(i);F(l)&&s.push(l)}),Object.keys(this.groupFields).forEach(i=>{const l=this.validateGroup(i);F(l)&&s.push(l)}),Promise.allSettled(s).then(()=>{var i;this.afterSubmitValidation(e),(i=this.onValidateCallback)==null||i.call(this,{isValid:this.isFormValid(),isSubmitted:this.isSubmitted,fields:this.getCompatibleFields(),groups:{...this.groupFields}}),t(!!s.length)})})}revalidate(){return new Promise(e=>{this.validateHandler(void 0,!0).finally(()=>{this.globalConfig.focusInvalidField&&this.focusInvalidField(),e(this.isValid)})})}validateHandler(e,t=!1){return this.globalConfig.lockForm&&this.lockForm(),this.validate(t).finally(()=>{var s,i;this.globalConfig.lockForm&&this.unlockForm(),this.isValid?(s=this.onSuccessCallback)==null||s.call(this,e):(i=this.onFailCallback)==null||i.call(this,this.getCompatibleFields(),this.groupFields)})}setForm(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}addListener(e,t,s){t.addEventListener(e,s),this.eventListeners.push({type:e,elem:t,func:s})}removeListener(e,t,s){t.removeEventListener(e,s),this.eventListeners=this.eventListeners.filter(i=>i.type!==e||i.elem!==t)}addField(e,t,s){if(typeof e!="string"&&!y(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");let i;if(typeof e=="string"?i=this.form.querySelector(e):i=e,!i)throw Error("Field doesn't exist in the DOM! Please check the field selector.");if(!Array.isArray(t)||!t.length)throw Error("Rules argument should be an array and should contain at least 1 element.");t.forEach(r=>{if(!("rule"in r||"validator"in r||"plugin"in r))throw Error("Rules argument must contain at least one rule or validator property.");if(!r.validator&&!r.plugin&&(!r.rule||!Object.values(c).includes(r.rule)))throw Error(`Rule should be one of these types: ${Object.values(c).join(", ")}. Provided value: ${r.rule}`)});const l=this.setKeyByFieldSelector(e);return this.fields[l]={elem:i,rules:t,isValid:void 0,touched:!1,config:s},this.setListeners(i),(this.isSubmitted||this.globalConfig.validateBeforeSubmitting)&&this.validateField(l),this}removeField(e){if(typeof e!="string"&&!y(e))throw Error("Field selector is not valid. Please specify a string selector or a valid DOM element.");const t=this.getKeyByFieldSelector(e);if(!t||!this.fields[t])return console.error("Field not found. Check the field selector."),this;const s=this.getListenerType(this.fields[t].elem.type);return this.removeListener(s,this.fields[t].elem,this.handlerChange),this.clearErrors(),delete this.fields[t],this}removeGroup(e){if(typeof e!="string")throw Error("Group selector is not valid. Please specify a string selector.");const t=this.getKeyByFieldSelector(e);return!t||!this.groupFields[t]?(console.error("Group not found. Check the group selector."),this):(this.groupFields[t].elems.forEach(s=>{const i=this.getListenerType(s.type);this.removeListener(i,s,this.handlerChange)}),this.clearErrors(),delete this.groupFields[t],this)}addRequiredGroup(e,t,s,i){if(typeof e!="string"&&!y(e))throw Error("Group selector is not valid. Please specify a string selector or a valid DOM element.");let l;if(typeof e=="string"?l=this.form.querySelector(e):l=e,!l)throw Error("Group selector not found! Please check the group selector.");const r=l.querySelectorAll("input"),a=Array.from(r).filter(n=>{const d=J(this.groupFields,Y(n));return d?d[1].elems.find(f=>f!==n):!0}),h=this.setKeyByFieldSelector(e);return this.groupFields[h]={rules:[{rule:S.Required,errorMessage:t,successMessage:i}],groupElem:l,elems:a,touched:!1,isValid:void 0,config:s},r.forEach(n=>{this.setListeners(n)}),this}getListenerType(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";default:return"input"}}setListeners(e){const t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}clearFieldLabel(e){var t,s;(t=this.errorLabels[e])==null||t.remove(),(s=this.successLabels[e])==null||s.remove()}clearFieldStyle(e){var t,s,i,l;const r=this.fields[e],a=((t=r.config)==null?void 0:t.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(a).forEach(n=>{r.elem.style[n]=""});const h=((s=r.config)==null?void 0:s.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(h).forEach(n=>{r.elem.style[n]=""}),r.elem.classList.remove(...m(((i=r.config)==null?void 0:i.errorFieldCssClass)||this.globalConfig.errorFieldCssClass),...m(((l=r.config)==null?void 0:l.successFieldCssClass)||this.globalConfig.successFieldCssClass))}clearErrors(){var e,t;Object.keys(this.errorLabels).forEach(s=>this.errorLabels[s].remove()),Object.keys(this.successLabels).forEach(s=>this.successLabels[s].remove());for(const s in this.fields)this.clearFieldStyle(s);for(const s in this.groupFields){const i=this.groupFields[s],l=((e=i.config)==null?void 0:e.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(l).forEach(a=>{i.elems.forEach(h=>{var n;h.style[a]="",h.classList.remove(...m(((n=i.config)==null?void 0:n.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))})});const r=((t=i.config)==null?void 0:t.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(r).forEach(a=>{i.elems.forEach(h=>{var n;h.style[a]="",h.classList.remove(...m(((n=i.config)==null?void 0:n.successFieldCssClass)||this.globalConfig.successFieldCssClass))})})}this.tooltips=[]}isTooltip(){return!!this.globalConfig.tooltip}lockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let t=0,s=e.length;t<s;++t)e[t].setAttribute("data-just-validate-fallback-disabled",e[t].disabled?"true":"false"),e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webkitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"}unlockForm(){const e=this.form.querySelectorAll("input, textarea, button, select");for(let t=0,s=e.length;t<s;++t)e[t].getAttribute("data-just-validate-fallback-disabled")!=="true"&&e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webkitFilter="",e[t].style.filter=""}renderTooltip(e,t,s){var i;const{top:l,left:r,width:a,height:h}=e.getBoundingClientRect(),n=t.getBoundingClientRect(),d=s||((i=this.globalConfig.tooltip)==null?void 0:i.position);switch(d){case"left":{t.style.top=`${l+h/2-n.height/2}px`,t.style.left=`${r-n.width-C}px`;break}case"top":{t.style.top=`${l-n.height-C}px`,t.style.left=`${r+a/2-n.width/2}px`;break}case"right":{t.style.top=`${l+h/2-n.height/2}px`,t.style.left=`${r+a+C}px`;break}case"bottom":{t.style.top=`${l+h+C}px`,t.style.left=`${r+a/2-n.width/2}px`;break}}return t.dataset.direction=d,{refresh:()=>{this.renderTooltip(e,t,s)}}}createErrorLabelElem(e,t,s){const i=document.createElement("div");i.innerHTML=t;const l=this.isTooltip()?s==null?void 0:s.errorLabelStyle:(s==null?void 0:s.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(i.style,l),i.classList.add(...m((s==null?void 0:s.errorLabelCssClass)||this.globalConfig.errorLabelCssClass),"just-validate-error-label"),this.isTooltip()&&(i.dataset.tooltip="true"),this.globalConfig.testingMode&&(i.dataset.testId=`error-label-${e}`),this.errorLabels[e]=i,i}createSuccessLabelElem(e,t,s){if(t===void 0)return null;const i=document.createElement("div");i.innerHTML=t;const l=(s==null?void 0:s.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(i.style,l),i.classList.add(...m((s==null?void 0:s.successLabelCssClass)||this.globalConfig.successLabelCssClass),"just-validate-success-label"),this.globalConfig.testingMode&&(i.dataset.testId=`success-label-${e}`),this.successLabels[e]=i,i}renderErrorsContainer(e,t){const s=t||this.globalConfig.errorsContainer;if(typeof s=="string"){const i=this.form.querySelector(s);if(i)return i.appendChild(e),!0;console.error(`Error container with ${s} selector not found. Errors will be rendered as usual`)}return s instanceof Element?(s.appendChild(e),!0):(s!==void 0&&console.error("Error container not found. It should be a string or existing Element. Errors will be rendered as usual"),!1)}renderGroupLabel(e,t,s,i){!i&&this.renderErrorsContainer(t,s)||e.appendChild(t)}renderFieldLabel(e,t,s,i){var l,r,a,h,n,d,f;if(!(!i&&this.renderErrorsContainer(t,s)))if(e.type==="checkbox"||e.type==="radio"){const b=document.querySelector(`label[for="${e.getAttribute("id")}"]`);((r=(l=e.parentElement)==null?void 0:l.tagName)==null?void 0:r.toLowerCase())==="label"?(h=(a=e.parentElement)==null?void 0:a.parentElement)==null||h.appendChild(t):b?(n=b.parentElement)==null||n.appendChild(t):(d=e.parentElement)==null||d.appendChild(t)}else(f=e.parentElement)==null||f.appendChild(t)}showLabels(e,t){Object.keys(e).forEach((s,i)=>{const l=e[s],r=this.getKeyByFieldSelector(s);if(!r||!this.fields[r]){console.error("Field not found. Check the field selector.");return}const a=this.fields[r];a.isValid=!t,this.clearFieldStyle(r),this.clearFieldLabel(r),this.renderFieldError(r,!1,l),i===0&&this.globalConfig.focusInvalidField&&setTimeout(()=>a.elem.focus(),0)})}showErrors(e){if(typeof e!="object")throw Error("[showErrors]: Errors should be an object with key: value format");this.showLabels(e,!0)}showSuccessLabels(e){if(typeof e!="object")throw Error("[showSuccessLabels]: Labels should be an object with key: value format");this.showLabels(e,!1)}renderFieldError(e,t=!1,s){var i,l,r,a,h,n;const d=this.fields[e];if(d.isValid===!1&&(this.isValid=!1),d.isValid===void 0||!t&&!this.isSubmitted&&!d.touched&&s===void 0)return;if(d.isValid){if(!d.asyncCheckPending){const b=this.createSuccessLabelElem(e,s!==void 0?s:d.successMessage,d.config);b&&this.renderFieldLabel(d.elem,b,(i=d.config)==null?void 0:i.errorsContainer,!0),d.elem.classList.add(...m(((l=d.config)==null?void 0:l.successFieldCssClass)||this.globalConfig.successFieldCssClass))}return}d.elem.classList.add(...m(((r=d.config)==null?void 0:r.errorFieldCssClass)||this.globalConfig.errorFieldCssClass));const f=this.createErrorLabelElem(e,s!==void 0?s:d.errorMessage,d.config);this.renderFieldLabel(d.elem,f,(a=d.config)==null?void 0:a.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(d.elem,f,(n=(h=d.config)==null?void 0:h.tooltip)==null?void 0:n.position))}renderGroupError(e,t=!0){var s,i,l,r;const a=this.groupFields[e];if(a.isValid===!1&&(this.isValid=!1),a.isValid===void 0||!t&&!this.isSubmitted&&!a.touched)return;if(a.isValid){a.elems.forEach(d=>{var f,b;Object.assign(d.style,((f=a.config)==null?void 0:f.successFieldStyle)||this.globalConfig.successFieldStyle),d.classList.add(...m(((b=a.config)==null?void 0:b.successFieldCssClass)||this.globalConfig.successFieldCssClass))});const n=this.createSuccessLabelElem(e,a.successMessage,a.config);n&&this.renderGroupLabel(a.groupElem,n,(s=a.config)==null?void 0:s.errorsContainer,!0);return}this.isValid=!1,a.elems.forEach(n=>{var d,f;Object.assign(n.style,((d=a.config)==null?void 0:d.errorFieldStyle)||this.globalConfig.errorFieldStyle),n.classList.add(...m(((f=a.config)==null?void 0:f.errorFieldCssClass)||this.globalConfig.errorFieldCssClass))});const h=this.createErrorLabelElem(e,a.errorMessage,a.config);this.renderGroupLabel(a.groupElem,h,(i=a.config)==null?void 0:i.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(a.groupElem,h,(r=(l=a.config)==null?void 0:l.tooltip)==null?void 0:r.position))}renderErrors(e=!1){if(!(!this.isSubmitted&&!e&&!this.globalConfig.validateBeforeSubmitting)){this.clearErrors(),this.isValid=!0;for(const t in this.groupFields)this.renderGroupError(t);for(const t in this.fields)this.renderFieldError(t)}}destroy(){this.eventListeners.forEach(e=>{this.removeListener(e.type,e.elem,e.func)}),Object.keys(this.customStyleTags).forEach(e=>{this.customStyleTags[e].remove()}),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}refresh(){this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach(e=>{const t=this.getFieldSelectorByKey(e);t&&this.addField(t,[...this.fields[e].rules],this.fields[e].config)})):console.error("Cannot initialize the library! Form is not defined")}setCurrentLocale(e){if(typeof e!="string"&&e!==void 0){console.error("Current locale should be a string");return}this.currentLocale=e,this.isSubmitted&&this.validate()}onSuccess(e){return this.onSuccessCallback=e,this}onFail(e){return this.onFailCallback=e,this}onValidate(e){return this.onValidateCallback=e,this}}const L={form:document.querySelector("#sign-up-form"),input:document.querySelector("#email"),btn:document.querySelector("#submit-form"),modal:document.querySelector(".modal-success"),userEmail:document.querySelector(".user-email")},I={errorMessage:"Valid email required",successMessage:"Looks good!"},v={fields:{success:"success-field",error:"error-field"},labels:{general:"labels",success:"success-label",error:"error-label"},modifiers:{granted:"unlocked",denied:"locked"}},ee=new R(L.form,{successFieldCssClass:[v.fields.success],errorFieldCssClass:[v.fields.error],successLabelCssClass:[v.labels.general,v.labels.success],errorLabelCssClass:[v.labels.general,v.labels.error],validateBeforeSubmitting:!0});ee.addField(L.input,[{rule:"required"},{rule:"email",errorMessage:I.errorMessage}],{successMessage:I.successMessage});class se{constructor(e,t){g(this,"unlockSubmitBtn",()=>{this.btn.classList.replace(this.cssClasses.modifiers.denied,this.cssClasses.modifiers.granted)});g(this,"lockSubmitBtn",()=>{this.btn.classList.replace(this.cssClasses.modifiers.granted,this.cssClasses.modifiers.denied)});g(this,"getState",()=>this.input.classList.contains(this.cssClasses.fields.success));g(this,"handleInputChange",()=>this.getState()?this.unlockSubmitBtn():this.lockSubmitBtn());g(this,"removeSuccessLabel",()=>document.querySelector(`.${this.cssClasses.labels.success}`).remove());g(this,"clearInput",()=>this.input.value="");g(this,"insertUserEmail",()=>this.userEmail.textContent=this.input.value);g(this,"restoreInitialState",()=>{this.clearInput(),this.removeSuccessLabel(),this.lockSubmitBtn()});g(this,"handleFormSubmit",e=>{this.getState()&&(e.preventDefault(),this.insertUserEmail(),this.modal.showModal(),this.restoreInitialState())});g(this,"init",()=>{this.input.addEventListener("input",this.handleInputChange),this.form.addEventListener("submit",this.handleFormSubmit)});this.form=e.form,this.input=e.input,this.btn=e.btn,this.modal=e.modal,this.userEmail=e.userEmail,this.cssClasses=t}}const te=new se(L,v);te.init();
